def solution(n, info):
    answer = []
    max_diff = 0
    info = info[::-1]
            
    def DFS(idx, remain,apeach, ryan, ans):
        nonlocal answer, max_diff
        if remain < 0 :
            return
        if idx > 10 and remain >=0:
            if max_diff < ryan - apeach:
                if remain:
                    ans[0] += remain
                max_diff = ryan - apeach
                answer.clear()
                answer.append(ans)
            return
        DFS(idx+1, remain-info[idx]-1,apeach, ryan+(idx) ,ans+[info[idx]+1])
        DFS(idx+1, remain,apeach+(idx) if info[idx] else apeach, ryan, ans+[0])
    
    DFS(0,n,0,0,[])
    
        
    return answer[-1][::-1] if answer else [-1]